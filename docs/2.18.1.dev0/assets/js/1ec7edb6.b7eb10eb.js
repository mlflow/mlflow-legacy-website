"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8804],{3447:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=n(4848),r=n(8453),o=n(8774);const s={},l="Tutorial Overview",a={id:"getting-started/registering-first-model/index",title:"Tutorial Overview",description:"The MLflow Model Registry has several core components:",source:"@site/docs/getting-started/registering-first-model/index.mdx",sourceDirName:"getting-started/registering-first-model",slug:"/getting-started/registering-first-model/",permalink:"/getting-started/registering-first-model/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Quickstart: Compare runs, choose a model, and deploy it to a REST API",permalink:"/getting-started/quickstart-2/"},next:{title:"Register a Model",permalink:"/getting-started/registering-first-model/step1-register-model/"}},d={},c=[];function g(e){const t={h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"tutorial-overview",children:"Tutorial Overview"})}),"\n",(0,i.jsx)(t.p,{children:"The MLflow Model Registry has several core components:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["A ",(0,i.jsx)(t.strong,{children:"Centralized Model Store"})," is a single location for your MLflow models, facilitating model\nversioning, sharing, and deployment in a consistent and efficient manner."]}),"\n",(0,i.jsxs)(t.li,{children:["A ",(0,i.jsx)(t.strong,{children:"Set of APIs"})," that allow you to programmatically create, read, update, and delete models."]}),"\n",(0,i.jsxs)(t.li,{children:["A ",(0,i.jsx)(t.strong,{children:"GUI"})," that allows you to manually view and manage models in the centralized model store."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The MLflow Model Registry provides some additional functionality that is relevant to model\ndevelopment and deployment:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Model Versioning"})," refers to logging different iterations of a model to facilitate comparison\nand serving. By default, models are versioned with a monotonically increasing ID, but you can also\nalias model versions."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Model Aliasing"})," allows you to assign mutable, named references to particular versions of a\nmodel, simplifying model deployment."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Model Tagging"})," allows users to label models with custom key-value pairs, facilitating\ndocumentation and categorization."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Model Annotations"})," are descriptive notes added to a model."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"In this tutorial, you will get up and running with the MLflow model registry in the least amount of\nsteps possible. The topics in this tutorial cover:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Registering a model programmatically to the Model Registry while logging."}),"\n",(0,i.jsx)(t.li,{children:"Viewing the registered model in the MLflow UI."}),"\n",(0,i.jsx)(t.li,{children:"Loading a registered model for inference."}),"\n"]}),"\n",(0,i.jsx)(o.A,{className:"button button--primary",to:"step1-register-model",children:(0,i.jsx)("span",{children:"View the tutorial"})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var i=n(6540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);