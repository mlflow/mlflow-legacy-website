"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1872,2348,3930,4729,5205,7110,7586,9491,9967],{20775:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/langgraph-child-span-076b0cb599aeabce965b36602d5fda82.png"},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>i});var t=a(96540);const r={},l=t.createContext(r);function o(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(l.Provider,{value:n},e.children)}},61096:(e,n,a)=>{a.d(n,{A:()=>o});a(96540);var t=a(71021);const r={tableOfContentsInline:"tableOfContentsInline_prmo"};var l=a(74848);function o(e){let{toc:n,minHeadingLevel:a,maxHeadingLevel:o}=e;return(0,l.jsx)("div",{className:r.tableOfContentsInline,children:(0,l.jsx)(t.A,{toc:n,minHeadingLevel:a,maxHeadingLevel:o,className:"table-of-contents",linkClassName:null})})}},65537:(e,n,a)=>{a.d(n,{A:()=>b});var t=a(96540),r=a(34164),l=a(65627),o=a(56347),i=a(50372),s=a(30604),c=a(11861),m=a(78749);function p(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:r}}=e;return{value:n,label:a,attributes:t,default:r}}))}(a);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function h(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function u(e){let{queryString:n=!1,groupId:a}=e;const r=(0,o.W6)(),l=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,s.aZ)(l),(0,t.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(r.location.search);n.set(l,e),r.replace({...r.location,search:n.toString()})}),[l,r])]}function f(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,l=d(e),[o,s]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:l}))),[c,p]=u({queryString:a,groupId:r}),[f,g]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,l]=(0,m.Dv)(a);return[r,(0,t.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:r}),w=(()=>{const e=c??f;return h({value:e,tabValues:l})?e:null})();(0,i.A)((()=>{w&&s(w)}),[w]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),g(e)}),[p,g,l]),tabValues:l}}var g=a(9136);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var _=a(74848);function x(e){let{className:n,block:a,selectedValue:t,selectValue:o,tabValues:i}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),m=e=>{const n=e.currentTarget,a=s.indexOf(n),r=i[a].value;r!==t&&(c(n),o(r))},p=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;n=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;n=s[a]??s[s.length-1];break}}n?.focus()};return(0,_.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},n),children:i.map((e=>{let{value:n,label:a,attributes:l}=e;return(0,_.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{s.push(e)},onKeyDown:p,onClick:m,...l,className:(0,r.A)("tabs__item",w.tabItem,l?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function y(e){let{lazy:n,children:a,selectedValue:l}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===l));return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,_.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function v(e){const n=f(e);return(0,_.jsxs)("div",{className:(0,r.A)("tabs-container",w.tabList),children:[(0,_.jsx)(x,{...n,...e}),(0,_.jsx)(y,{...n,...e})]})}function b(e){const n=(0,g.A)();return(0,_.jsx)(v,{...e,children:p(e.children)},String(n))}},66114:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"tracing/integrations/langgraph","title":"Tracing LangGraph\ud83e\udd9c\ud83d\udd78\ufe0f","description":"LangChain Tracing via autolog","source":"@site/docs/tracing/integrations/langgraph.mdx","sourceDirName":"tracing/integrations","slug":"/tracing/integrations/langgraph","permalink":"/docs/2.21.0rc0/tracing/integrations/langgraph","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"LangGraph"},"sidebar":"docsSidebar","previous":{"title":"LangChain","permalink":"/docs/2.21.0rc0/tracing/integrations/langchain"},"next":{"title":"LlamaIndex","permalink":"/docs/2.21.0rc0/tracing/integrations/llama_index"}}');var r=a(74848),l=a(28453),o=a(67756);a(86294),a(61096),a(65537),a(79329);const i={sidebar_position:3,sidebar_label:"LangGraph"},s="Tracing LangGraph\ud83e\udd9c\ud83d\udd78\ufe0f",c={},m=[{value:"Usage",id:"usage",level:3},{value:"Adding spans within a node or a tool",id:"adding-spans-within-a-node-or-a-tool",level:3},{value:"Disable auto-tracing",id:"disable-auto-tracing",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tracing-langgraph\ufe0f",children:"Tracing LangGraph\ud83e\udd9c\ud83d\udd78\ufe0f"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"LangChain Tracing via autolog",src:a(83451).A+"",width:"1824",height:"1080"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://www.langchain.com/langgraph",children:"LangGraph"})," is an open-source library for building stateful, multi-actor applications with LLMs, used to create agent and multi-agent workflows."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/tracing/",children:"MLflow Tracing"})," provides automatic tracing capability for LangGraph, as a extension of its LangChain integration. By enabling auto-tracing for LangChain by calling the ",(0,r.jsx)(o.B,{fn:"mlflow.langchain.autolog"})," function, MLflow will\nautomatically capture the graph execution into a trace and log it to the active MLflow Experiment."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import mlflow\n\nmlflow.langchain.autolog()\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["MLflow LangGraph integration is not only about tracing. MLflow offers full tracking experience for LangGraph, including model tracking, dependency management, and evaluation. Please checkout the ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/llms/langchain",children:"MLflow LangChain Flavor"})})," to learn more!"]})}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.p,{children:"Running the following code will generate a trace for the graph as shown in the above video clip."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import Literal\n\nimport mlflow\n\nfrom langchain_core.messages import AIMessage, ToolCall\nfrom langchain_core.outputs import ChatGeneration, ChatResult\nfrom langchain_core.tools import tool\nfrom langchain_openai import ChatOpenAI\nfrom langgraph.prebuilt import create_react_agent\n\n# Enabling tracing for LangGraph (LangChain)\nmlflow.langchain.autolog()\n\n# Optional: Set a tracking URI and an experiment\nmlflow.set_tracking_uri("http://localhost:5000")\nmlflow.set_experiment("LangGraph")\n\n\n@tool\ndef get_weather(city: Literal["nyc", "sf"]):\n    """Use this to get weather information."""\n    if city == "nyc":\n        return "It might be cloudy in nyc"\n    elif city == "sf":\n        return "It\'s always sunny in sf"\n\n\nllm = ChatOpenAI(model="gpt-4o-mini")\ntools = [get_weather]\ngraph = create_react_agent(llm, tools)\n\n# Invoke the graph\nresult = graph.invoke(\n    {"messages": [{"role": "user", "content": "what is the weather in sf?"}]}\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"adding-spans-within-a-node-or-a-tool",children:"Adding spans within a node or a tool"}),"\n",(0,r.jsxs)(n.p,{children:["By combining auto-tracing with the ",(0,r.jsx)(n.a,{href:"/tracing/api/manual-instrumentation/",children:"manual tracing APIs"}),", you can add child spans inside a node or tool, to get more detailed insights for the step."]}),"\n",(0,r.jsxs)(n.p,{children:["Let's take LangGraph's ",(0,r.jsx)(n.a,{href:"https://langchain-ai.github.io/langgraph/tutorials/code_assistant/langgraph_code_assistant/#graph",children:"Code Assistant"})," tutorial for example. The ",(0,r.jsx)(n.code,{children:"check_code"})," node actually consists of two different validations for the generated code. You may want to add span for each validation to see which validation were executed. To do so, simply create manual spans inside the node function."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def code_check(state: GraphState):\n    # State\n    messages = state["messages"]\n    code_solution = state["generation"]\n    iterations = state["iterations"]\n\n    # Get solution components\n    imports = code_solution.imports\n    code = code_solution.code\n\n    # Check imports\n    try:\n        # Create a child span manually with mlflow.start_span() API\n        with mlflow.start_span(name="import_check", span_type=SpanType.TOOL) as span:\n            span.set_inputs(imports)\n            exec(imports)\n            span.set_outputs("ok")\n    except Exception as e:\n        error_message = [("user", f"Your solution failed the import test: {e}")]\n        messages += error_message\n        return {\n            "generation": code_solution,\n            "messages": messages,\n            "iterations": iterations,\n            "error": "yes",\n        }\n\n    # Check execution\n    try:\n        code = imports + "\\n" + code\n        with mlflow.start_span(name="execution_check", span_type=SpanType.TOOL) as span:\n            span.set_inputs(code)\n            exec(code)\n            span.set_outputs("ok")\n    except Exception as e:\n        error_message = [("user", f"Your solution failed the code execution test: {e}")]\n        messages += error_message\n        return {\n            "generation": code_solution,\n            "messages": messages,\n            "iterations": iterations,\n            "error": "yes",\n        }\n\n    # No errors\n    return {\n        "generation": code_solution,\n        "messages": messages,\n        "iterations": iterations,\n        "error": "no",\n    }\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This way, the span for the ",(0,r.jsx)(n.code,{children:"check_code"})," node will have child spans, which record whether the each validation fails or not, with their exception details."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"LangGraph Child Span",src:a(20775).A+"",width:"2838",height:"478"})}),"\n",(0,r.jsx)(n.h3,{id:"disable-auto-tracing",children:"Disable auto-tracing"}),"\n",(0,r.jsxs)(n.p,{children:["Auto tracing for LangGraph can be disabled globally by calling ",(0,r.jsx)(n.code,{children:"mlflow.langchain.autolog(disable=True)"})," or ",(0,r.jsx)(n.code,{children:"mlflow.autolog(disable=True)"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},67756:(e,n,a)=>{a.d(n,{B:()=>s});a(96540);const t=JSON.parse('{"mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.fastai":"api_reference/python_api/mlflow.fastai.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.mleap":"api_reference/python_api/mlflow.mleap.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow.recipes":"api_reference/python_api/mlflow.recipes.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html"}');var r=a(29030),l=a(56289),o=a(74848);const i=e=>{const n=e.split(".");for(let a=n.length;a>0;a--){const e=n.slice(0,a).join(".");if(t[e])return e}return null};function s(e){let{fn:n,children:a}=e;const s=i(n);if(!s)return(0,o.jsx)(o.Fragment,{children:a});const c=(0,r.Ay)(`/${t[s]}#${n}`);return(0,o.jsx)(l.A,{to:c,target:"_blank",children:a??(0,o.jsxs)("code",{children:[n,"()"]})})}},71021:(e,n,a)=>{a.d(n,{A:()=>f});var t=a(96540),r=a(53115);function l(e){const n=e.map((e=>({...e,parentIndex:-1,children:[]}))),a=Array(7).fill(-1);n.forEach(((e,n)=>{const t=a.slice(2,e.level);e.parentIndex=Math.max(...t),a[e.level]=n}));const t=[];return n.forEach((e=>{const{parentIndex:a,...r}=e;a>=0?n[a].children.push(r):t.push(r)})),t}function o(e){let{toc:n,minHeadingLevel:a,maxHeadingLevel:t}=e;return n.flatMap((e=>{const n=o({toc:e.children,minHeadingLevel:a,maxHeadingLevel:t});return function(e){return e.level>=a&&e.level<=t}(e)?[{...e,children:n}]:n}))}function i(e){const n=e.getBoundingClientRect();return n.top===n.bottom?i(e.parentNode):n}function s(e,n){let{anchorTopOffset:a}=n;const t=e.find((e=>i(e).top>=a));if(t){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(i(t))?t:e[e.indexOf(t)-1]??null}return e[e.length-1]??null}function c(){const e=(0,t.useRef)(0),{navbar:{hideOnScroll:n}}=(0,r.p)();return(0,t.useEffect)((()=>{e.current=n?0:document.querySelector(".navbar").clientHeight}),[n]),e}function m(e){const n=(0,t.useRef)(void 0),a=c();(0,t.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:t,linkActiveClassName:r,minHeadingLevel:l,maxHeadingLevel:o}=e;function i(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(t),i=function(e){let{minHeadingLevel:n,maxHeadingLevel:a}=e;const t=[];for(let r=n;r<=a;r+=1)t.push(`h${r}.anchor`);return Array.from(document.querySelectorAll(t.join()))}({minHeadingLevel:l,maxHeadingLevel:o}),c=s(i,{anchorTopOffset:a.current}),m=e.find((e=>c&&c.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,a){a?(n.current&&n.current!==e&&n.current.classList.remove(r),e.classList.add(r),n.current=e):e.classList.remove(r)}(e,e===m)}))}return document.addEventListener("scroll",i),document.addEventListener("resize",i),i(),()=>{document.removeEventListener("scroll",i),document.removeEventListener("resize",i)}}),[e,a])}var p=a(56289),d=a(74848);function h(e){let{toc:n,className:a,linkClassName:t,isChild:r}=e;return n.length?(0,d.jsx)("ul",{className:r?void 0:a,children:n.map((e=>(0,d.jsxs)("li",{children:[(0,d.jsx)(p.A,{to:`#${e.id}`,className:t??void 0,dangerouslySetInnerHTML:{__html:e.value}}),(0,d.jsx)(h,{isChild:!0,toc:e.children,className:a,linkClassName:t})]},e.id)))}):null}const u=t.memo(h);function f(e){let{toc:n,className:a="table-of-contents table-of-contents__left-border",linkClassName:i="table-of-contents__link",linkActiveClassName:s,minHeadingLevel:c,maxHeadingLevel:p,...h}=e;const f=(0,r.p)(),g=c??f.tableOfContents.minHeadingLevel,w=p??f.tableOfContents.maxHeadingLevel,_=function(e){let{toc:n,minHeadingLevel:a,maxHeadingLevel:r}=e;return(0,t.useMemo)((()=>o({toc:l(n),minHeadingLevel:a,maxHeadingLevel:r})),[n,a,r])}({toc:n,minHeadingLevel:g,maxHeadingLevel:w});return m((0,t.useMemo)((()=>{if(i&&s)return{linkClassName:i,linkActiveClassName:s,minHeadingLevel:g,maxHeadingLevel:w}}),[i,s,g,w])),(0,d.jsx)(u,{toc:_,className:a,linkClassName:i,...h})}},79329:(e,n,a)=>{a.d(n,{A:()=>o});a(96540);var t=a(34164);const r={tabItem:"tabItem_Ymn6"};var l=a(74848);function o(e){let{children:n,hidden:a,className:o}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,o),hidden:a,children:n})}},83451:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/langgraph-tracing-de19faf75490081f4df76705b9a508ff.gif"},86294:(e,n,a)=>{a.d(n,{Zp:()=>s,AC:()=>i,WO:()=>m,tf:()=>d,_C:()=>c,$3:()=>p});var t=a(34164);const r={CardGroup:"CardGroup_P84T",MaxThreeColumns:"MaxThreeColumns_FO1r",AutofillColumns:"AutofillColumns_fKhQ",Card:"Card_aSCR",CardBordered:"CardBordered_glGF",CardBody:"CardBody_BhRs",TextColor:"TextColor_a8Tp",BoxRoot:"BoxRoot_Etgr",FlexWrapNowrap:"FlexWrapNowrap_f60k",FlexJustifyContentFlexStart:"FlexJustifyContentFlexStart_ZYv5",FlexDirectionRow:"FlexDirectionRow_T2qL",FlexAlignItemsCenter:"FlexAlignItemsCenter_EHVM",FlexFlex:"FlexFlex__JTE",Link:"Link_fVkl",MarginLeft4:"MarginLeft4_YQSJ",MarginTop4:"MarginTop4_jXKN",PaddingBottom4:"PaddingBottom4_O9gt",LogoCardContent:"LogoCardContent_kCQm",LogoCardImage:"LogoCardImage_JdcX",SmallLogoCardContent:"SmallLogoCardContent_LxhV",SmallLogoCardImage:"SmallLogoCardImage_tPZl",NewFeatureCardContent:"NewFeatureCardContent_Rq3d",NewFeatureCardHeading:"NewFeatureCardHeading_f6q3",NewFeatureCardHeadingSeparator:"NewFeatureCardHeadingSeparator_pSx8",NewFeatureCardTags:"NewFeatureCardTags_IFHO",NewFeatureCardWrapper:"NewFeatureCardWrapper_NQ0k"};var l=a(56289),o=a(74848);const i=e=>{let{children:n,isSmall:a}=e;return(0,o.jsx)("div",{className:(0,t.A)(r.CardGroup,a?r.AutofillColumns:r.MaxThreeColumns),children:n})},s=e=>{let{children:n,link:a=""}=e;return a?(0,o.jsx)(l.A,{className:(0,t.A)(r.Link,r.Card,r.CardBordered),to:a,children:n}):(0,o.jsx)("div",{className:(0,t.A)(r.Card,r.CardBordered),children:n})},c=e=>{let{headerText:n,link:a,text:l}=e;return(0,o.jsx)(s,{link:a,children:(0,o.jsxs)("span",{children:[(0,o.jsx)("div",{className:(0,t.A)(r.CardTitle,r.BoxRoot,r.PaddingBottom4),style:{pointerEvents:"none"},children:(0,o.jsx)("div",{className:(0,t.A)(r.BoxRoot,r.FlexFlex,r.FlexAlignItemsCenter,r.FlexDirectionRow,r.FlexJustifyContentFlexStart,r.FlexWrapNowrap),style:{marginLeft:"-4px",marginTop:"-4px"},children:(0,o.jsx)("div",{className:(0,t.A)(r.BoxRoot,r.BoxHideIfEmpty,r.MarginTop4,r.MarginLeft4),style:{pointerEvents:"auto"},children:(0,o.jsx)("span",{className:"",children:n})})})}),(0,o.jsx)("span",{className:(0,t.A)(r.TextColor,r.CardBody),children:(0,o.jsx)("p",{children:l})})]})})},m=e=>{let{description:n,children:a,link:t}=e;return(0,o.jsx)(s,{link:t,children:(0,o.jsxs)("div",{className:r.LogoCardContent,children:[(0,o.jsx)("div",{className:r.LogoCardImage,children:a}),(0,o.jsx)("p",{className:r.TextColor,children:n})]})})},p=e=>{let{children:n,link:a}=e;return(0,o.jsx)(s,{link:a,children:(0,o.jsx)("div",{className:r.SmallLogoCardContent,children:(0,o.jsx)("div",{className:(0,t.A)("max-height-img-container",r.SmallLogoCardImage),children:n})})})},d=e=>{let{children:n,description:a,name:t,releaseVersion:i,learnMoreLink:c=""}=e;return(0,o.jsx)(s,{children:(0,o.jsxs)("div",{className:r.NewFeatureCardWrapper,children:[(0,o.jsxs)("div",{className:r.NewFeatureCardContent,children:[(0,o.jsxs)("div",{className:r.NewFeatureCardHeading,children:[t,(0,o.jsx)("br",{}),(0,o.jsx)("hr",{className:r.NewFeatureCardHeadingSeparator})]}),(0,o.jsx)("div",{className:r.LogoCardImage,children:n}),(0,o.jsx)("br",{}),(0,o.jsx)("p",{children:a}),(0,o.jsx)("br",{})]}),(0,o.jsxs)("div",{className:r.NewFeatureCardTags,children:[(0,o.jsx)("div",{children:c&&(0,o.jsx)(l.A,{className:"button button--outline button--sm button--primary",to:c,children:"Learn more"})}),(0,o.jsxs)(l.A,{className:"button button--outline button--sm button--primary",to:`https://github.com/mlflow/mlflow/releases/tag/v${i}`,children:["released in ",i]})]})]})})}}}]);