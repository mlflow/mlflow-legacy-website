"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6944],{87076:(e,l,a)=>{a.d(l,{B:()=>s});a(96540);const n=JSON.parse('{"mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.evaluation":"api_reference/python_api/mlflow.evaluation.html","mlflow.fastai":"api_reference/python_api/mlflow.fastai.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.mleap":"api_reference/python_api/mlflow.mleap.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow.recipes":"api_reference/python_api/mlflow.recipes.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html"}');var r=a(41306),o=a(68957),t=a(74848);const i=e=>{const l=e.split(".");for(let a=l.length;a>0;a--){const e=l.slice(0,a).join(".");if(n[e])return e}return null};function s(e){let{fn:l,children:a}=e;const s=i(l);if(!s)return(0,t.jsx)(t.Fragment,{children:a});const m=(0,r.Ay)(`/${n[s]}#${l}`);return(0,t.jsx)(o.A,{to:m,target:"_blank",children:a??(0,t.jsxs)("code",{children:[l,"()"]})})}},37395:(e,l,a)=>{a.d(l,{Zp:()=>s,AC:()=>i,WO:()=>p,tf:()=>c,_C:()=>m,$3:()=>d});var n=a(34164);const r={CardGroup:"CardGroup_P84T",MaxThreeColumns:"MaxThreeColumns_FO1r",AutofillColumns:"AutofillColumns_fKhQ",Card:"Card_aSCR",CardBordered:"CardBordered_glGF",CardBody:"CardBody_BhRs",TextColor:"TextColor_a8Tp",BoxRoot:"BoxRoot_Etgr",FlexWrapNowrap:"FlexWrapNowrap_f60k",FlexJustifyContentFlexStart:"FlexJustifyContentFlexStart_ZYv5",FlexDirectionRow:"FlexDirectionRow_T2qL",FlexAlignItemsCenter:"FlexAlignItemsCenter_EHVM",FlexFlex:"FlexFlex__JTE",Link:"Link_fVkl",MarginLeft4:"MarginLeft4_YQSJ",MarginTop4:"MarginTop4_jXKN",PaddingBottom4:"PaddingBottom4_O9gt",LogoCardContent:"LogoCardContent_kCQm",LogoCardImage:"LogoCardImage_JdcX",SmallLogoCardContent:"SmallLogoCardContent_LxhV",SmallLogoCardImage:"SmallLogoCardImage_tPZl",NewFeatureCardContent:"NewFeatureCardContent_Rq3d",NewFeatureCardHeading:"NewFeatureCardHeading_f6q3",NewFeatureCardHeadingSeparator:"NewFeatureCardHeadingSeparator_pSx8",NewFeatureCardTags:"NewFeatureCardTags_IFHO",NewFeatureCardWrapper:"NewFeatureCardWrapper_NQ0k"};var o=a(68957),t=a(74848);const i=e=>{let{children:l,isSmall:a}=e;return(0,t.jsx)("div",{className:(0,n.A)(r.CardGroup,a?r.AutofillColumns:r.MaxThreeColumns),children:l})},s=e=>{let{children:l,link:a=""}=e;return a?(0,t.jsx)(o.A,{className:(0,n.A)(r.Link,r.Card,r.CardBordered),to:a,children:l}):(0,t.jsx)("div",{className:(0,n.A)(r.Card,r.CardBordered),children:l})},m=e=>{let{headerText:l,link:a,text:o}=e;return(0,t.jsx)(s,{link:a,children:(0,t.jsxs)("span",{children:[(0,t.jsx)("div",{className:(0,n.A)(r.CardTitle,r.BoxRoot,r.PaddingBottom4),style:{pointerEvents:"none"},children:(0,t.jsx)("div",{className:(0,n.A)(r.BoxRoot,r.FlexFlex,r.FlexAlignItemsCenter,r.FlexDirectionRow,r.FlexJustifyContentFlexStart,r.FlexWrapNowrap),style:{marginLeft:"-4px",marginTop:"-4px"},children:(0,t.jsx)("div",{className:(0,n.A)(r.BoxRoot,r.BoxHideIfEmpty,r.MarginTop4,r.MarginLeft4),style:{pointerEvents:"auto"},children:(0,t.jsx)("span",{className:"",children:l})})})}),(0,t.jsx)("span",{className:(0,n.A)(r.TextColor,r.CardBody),children:(0,t.jsx)("p",{children:o})})]})})},p=e=>{let{description:l,children:a,link:n}=e;return(0,t.jsx)(s,{link:n,children:(0,t.jsxs)("div",{className:r.LogoCardContent,children:[(0,t.jsx)("div",{className:r.LogoCardImage,children:a}),(0,t.jsx)("p",{className:r.TextColor,children:l})]})})},d=e=>{let{children:l,link:a}=e;return(0,t.jsx)(s,{link:a,children:(0,t.jsx)("div",{className:r.SmallLogoCardContent,children:(0,t.jsx)("div",{className:(0,n.A)("max-height-img-container",r.SmallLogoCardImage),children:l})})})},c=e=>{let{children:l,description:a,name:n,releaseVersion:i,learnMoreLink:m=""}=e;return(0,t.jsx)(s,{children:(0,t.jsxs)("div",{className:r.NewFeatureCardWrapper,children:[(0,t.jsxs)("div",{className:r.NewFeatureCardContent,children:[(0,t.jsxs)("div",{className:r.NewFeatureCardHeading,children:[n,(0,t.jsx)("br",{}),(0,t.jsx)("hr",{className:r.NewFeatureCardHeadingSeparator})]}),(0,t.jsx)("div",{className:r.LogoCardImage,children:l}),(0,t.jsx)("br",{}),(0,t.jsx)("p",{children:a}),(0,t.jsx)("br",{})]}),(0,t.jsxs)("div",{className:r.NewFeatureCardTags,children:[(0,t.jsx)("div",{children:m&&(0,t.jsx)(o.A,{className:"button button--outline button--sm button--primary",to:m,children:"Learn more"})}),(0,t.jsxs)(o.A,{className:"button button--outline button--sm button--primary",to:`https://github.com/mlflow/mlflow/releases/tag/v${i}`,children:["released in ",i]})]})]})})}},81707:(e,l,a)=>{a.r(l),a.d(l,{assets:()=>m,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"tracing/integrations/dspy","title":"Tracing DSPy\ud83e\udde9","description":"LlamaIndex Tracing via autolog","source":"@site/docs/tracing/integrations/dspy.mdx","sourceDirName":"tracing/integrations","slug":"/tracing/integrations/dspy","permalink":"/docs/2.20.1.dev0/tracing/integrations/dspy","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"sidebar_label":"DSPy"},"sidebar":"docsSidebar","previous":{"title":"Bedrock","permalink":"/docs/2.20.1.dev0/tracing/integrations/bedrock"},"next":{"title":"AutoGen","permalink":"/docs/2.20.1.dev0/tracing/integrations/autogen"}}');var r=a(74848),o=a(28453),t=a(87076);a(37395),a(60913),a(22707),a(53632);const i={sidebar_position:5,sidebar_label:"DSPy"},s="Tracing DSPy\ud83e\udde9",m={},p=[{value:"Example Usage",id:"example-usage",level:3},{value:"LlamaIndex workflow",id:"llamaindex-workflow",level:3},{value:"Disable auto-tracing",id:"disable-auto-tracing",level:3}];function d(e){const l={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.header,{children:(0,r.jsx)(l.h1,{id:"tracing-dspy",children:"Tracing DSPy\ud83e\udde9"})}),"\n",(0,r.jsx)(l.p,{children:(0,r.jsx)(l.img,{alt:"LlamaIndex Tracing via autolog",src:a(97102).A+"",width:"1248",height:"720"})}),"\n",(0,r.jsxs)(l.p,{children:[(0,r.jsx)(l.a,{href:"https://dspy.ai/",children:"DSPy"})," is an open-source framework for building modular AI systems and offers algorithms for optimizing their prompts and weights."]}),"\n",(0,r.jsxs)(l.p,{children:[(0,r.jsx)(l.a,{href:"../",children:"MLflow Tracing"})," provides automatic tracing capability for DSPy. You can enable tracing\nfor DSPy by calling the ",(0,r.jsx)(t.B,{fn:"mlflow.dspy.autolog"})," function, and nested traces are automatically logged to the active MLflow Experiment upon invocation of DSPy modules."]}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-python",children:"import mlflow\n\nmlflow.llama_index.autolog()\n"})}),"\n",(0,r.jsx)(l.admonition,{type:"tip",children:(0,r.jsxs)(l.p,{children:["MLflow DSPy integration is not only about tracing. MLflow offers full tracking experience for DSPy, including model tracking, index management, and evaluation. Please checkout the ",(0,r.jsx)(l.strong,{children:(0,r.jsx)(l.a,{href:"/llms/dspy",children:"MLflow DSPy Flavor"})})," to learn more!"]})}),"\n",(0,r.jsx)(l.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-python",children:'import dspy\nimport mlflow\n\n# Enabling tracing for DSPy\nmlflow.dspy.autolog()\n\n# Optional: Set a tracking URI and an experiment\nmlflow.set_tracking_uri("http://localhost:5000")\nmlflow.set_experiment("DSPy")\n\n# Define a simple ChainOfThought model and run it\nlm = dspy.LM("openai/gpt-4o-mini")\ndspy.configure(lm=lm)\n\n\n# Define a simple summarizer model and run it\nclass SummarizeSignature(dspy.Signature):\n    """Given a passage, generate a summary."""\n\n    passage: str = dspy.InputField(desc="a passage to summarize")\n    summary: str = dspy.OutputField(desc="a one-line summary of the passage")\n\n\nclass Summarize(dspy.Module):\n    def __init__(self):\n        self.summarize = dspy.ChainOfThought(SummarizeSignature)\n\n    def forward(self, passage: str):\n        return self.summarize(passage=passage)\n\n\nsummarizer = Summarize()\nsummarizer(\n    passage=(\n        "MLflow Tracing is a feature that enhances LLM observability in your Generative AI (GenAI) applications "\n        "by capturing detailed information about the execution of your application\'s services. Tracing provides "\n        "a way to record the inputs, outputs, and metadata associated with each intermediate step of a request, "\n        "enabling you to easily pinpoint the source of bugs and unexpected behaviors."\n    )\n)\n'})}),"\n",(0,r.jsx)(l.h3,{id:"llamaindex-workflow",children:"LlamaIndex workflow"}),"\n",(0,r.jsxs)(l.p,{children:["The ",(0,r.jsx)(l.code,{children:"Workflow"})," is LlamaIndex\u2019s next-generation GenAI orchestration framework. It is designed as a flexible and interpretable framework for building arbitrary LLM applications such as an agent, a RAG flow, a data extraction pipeline, etc. MLflow supports tracking, evaluating, and tracing the Workflow objects, which makes them more observable and maintainable."]}),"\n",(0,r.jsxs)(l.p,{children:["Automatic tracing for LlamaIndex workflow works off-the-shelf by calling the same ",(0,r.jsx)(l.code,{children:"mlflow.llama_index.autolog()"}),"."]}),"\n",(0,r.jsx)(l.p,{children:"To learn more about MLflow's integration with LlamaIndex Workflow, continue to the following tutorials:"}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.a,{href:"/llms/llama-index/notebooks/llama_index_workflow_tutorial",children:"Building a Tool-calling Agent with LlamaIndex Workflow and MLflow"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.a,{href:"https://mlflow.org/blog/mlflow-llama-index-workflow",children:"Building Advanced RAG with MLflow and LlamaIndex Workflow"})}),"\n"]}),"\n",(0,r.jsx)(l.h3,{id:"disable-auto-tracing",children:"Disable auto-tracing"}),"\n",(0,r.jsxs)(l.p,{children:["Auto tracing for LlamaIndex can be disabled globally by calling ",(0,r.jsx)(l.code,{children:"mlflow.llama_index.autolog(disable=True)"})," or ",(0,r.jsx)(l.code,{children:"mlflow.autolog(disable=True)"}),"."]})]})}function c(e={}){const{wrapper:l}={...(0,o.R)(),...e.components};return l?(0,r.jsx)(l,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},97102:(e,l,a)=>{a.d(l,{A:()=>n});const n=a.p+"assets/images/llamaindex-tracing-67ed751e565ef74209381a497c70cf18.gif"}}]);