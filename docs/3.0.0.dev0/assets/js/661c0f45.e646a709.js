"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7720],{11132:(e,l,n)=>{n.d(l,{A:()=>a});const a=n.p+"assets/images/create-prompt-alias-eada243c60800b04059e6a5311a5b492.png"},21098:(e,l,n)=>{n.d(l,{A:()=>a});const a=n.p+"assets/images/compare-prompt-versions-2082121aeaca4be99a0cf968535141ed.png"},67756:(e,l,n)=>{n.d(l,{B:()=>s});n(96540);const a=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html"}');var o=n(29030),t=n(56289),r=n(74848);const i=e=>{const l=e.split(".");for(let n=l.length;n>0;n--){const e=l.slice(0,n).join(".");if(a[e])return e}return null};function s(e){let{fn:l,children:n}=e;const s=i(l);if(!s)return(0,r.jsx)(r.Fragment,{children:n});const p=(0,o.Ay)(`/${a[s]}#${l}`);return(0,r.jsx)(t.A,{to:p,target:"_blank",children:n??(0,r.jsxs)("code",{children:[l,"()"]})})}},82510:(e,l,n)=>{n.d(l,{A:()=>a});const a=n.p+"assets/images/prompt-aliases-list-abcce1795c6c37ec5b7d90afefde7cf3.png"},83912:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>m,contentTitle:()=>p,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"prompts/cm","title":"Change Management","description":"Managing changes of prompts is crucial for maintaining quality, improving performance, and ensuring consistency across different environments. This page provides a comprehensive guide to change management in MLflow Prompt Registry.","source":"@site/docs/prompts/cm.mdx","sourceDirName":"prompts","slug":"/prompts/cm","permalink":"/docs/3.0.0.dev0/prompts/cm","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Manage Changes in Prompts"},"sidebar":"docsSidebar","previous":{"title":"Overview","permalink":"/docs/3.0.0.dev0/prompts/"},"next":{"title":"Evaluate Prompts","permalink":"/docs/3.0.0.dev0/prompts/evaluate"}}');var o=n(74848),t=n(28453),r=(n(67756),n(86294),n(61096),n(65537)),i=n(79329);const s={sidebar_position:2,sidebar_label:"Manage Changes in Prompts"},p="Change Management",m={},c=[{value:"Commit-based Versioning",id:"commit-based-versioning",level:2},{value:"Compare Prompt Versions",id:"compare-prompt-versions",level:2},{value:"Aliases",id:"aliases",level:2},{value:"Create an Alias",id:"create-an-alias",level:3},{value:"Load a Prompt using an Alias",id:"load-a-prompt-using-an-alias",level:3}];function d(e){const l={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(l.header,{children:(0,o.jsx)(l.h1,{id:"change-management",children:"Change Management"})}),"\n",(0,o.jsx)(l.p,{children:"Managing changes of prompts is crucial for maintaining quality, improving performance, and ensuring consistency across different environments. This page provides a comprehensive guide to change management in MLflow Prompt Registry."}),"\n",(0,o.jsx)(l.p,{children:(0,o.jsx)(l.img,{alt:"Aliases List",src:n(82510).A+"",width:"1358",height:"565"})}),"\n",(0,o.jsx)(l.h2,{id:"commit-based-versioning",children:"Commit-based Versioning"}),"\n",(0,o.jsx)(l.p,{children:"The design of the prompt registry is inspired by version control systems like Git."}),"\n",(0,o.jsxs)(l.ul,{children:["\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\ud83e\udea8 Immutable versions"}),": Once created, a prompt version cannot be modified. This ensures that the prompt's behavior remains consistent across different applications and experiments."]}),"\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\u2709\ufe0f Commit message"}),":  When creating a new prompt version, you can provide a commit message to document the changes made in the new version. This helps you and your team understand the context of the changes and track the evolution of the prompt over time."]}),"\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\ud83d\udd0d Difference view"}),": The MLflow UI provides a side-by-side comparison of prompt versions, highlighting the changes between versions. This makes it easy to understand the differences and track the evolution of the prompt."]}),"\n"]}),"\n",(0,o.jsx)(l.admonition,{title:"Why not use Git?",type:"tip",children:(0,o.jsx)(l.p,{children:"Hard-coding prompt text in source code is indeed a common practice, but it has several limitations. A GenAI application or project often contains multiple prompts for different components/tasks, as well as all software artifacts. Tracking the change of a single prompt with a monotonic Git tree is challenging."})}),"\n",(0,o.jsx)(l.h2,{id:"compare-prompt-versions",children:"Compare Prompt Versions"}),"\n",(0,o.jsxs)(l.p,{children:["MLflow Prompt Registry UI provides a side-by-side comparison of prompt versions, highlighting the changes between versions. To compare prompt versions in the MLflow UI, click on the ",(0,o.jsx)(l.strong,{children:"Compare"})," tab in the prompt details page and select the versions you want to compare."]}),"\n",(0,o.jsx)("div",{style:{width:"90%",margin:"10px"},children:(0,o.jsx)(l.p,{children:(0,o.jsx)(l.img,{alt:"Compare Prompt Versions",src:n(21098).A+"",width:"1267",height:"713"})})}),"\n",(0,o.jsx)(l.h2,{id:"aliases",children:"Aliases"}),"\n",(0,o.jsx)(l.p,{children:"Alias is a strong mechanism to managing prompt versions in production systems, without hardcoding version numbers in the application code. You can create an alias for a specific version of a prompt using either the MLflow UI or Python API."}),"\n",(0,o.jsxs)(l.p,{children:["The common use case for aliases is to build a robust ",(0,o.jsx)(l.strong,{children:"deployment pipeline"})," for your GenAI applications. For example, you can\nset a stage name such as ",(0,o.jsx)(l.code,{children:"beta"}),", ",(0,o.jsx)(l.code,{children:"staging"}),", ",(0,o.jsx)(l.code,{children:"production"}),", etc., to refer to the version used in that environment. By switching the alias to a different version, you can easily maintain multiple prompt versions for different environments and perform tasks such as\nroll-back A/B testing."]}),"\n",(0,o.jsx)(l.h3,{id:"create-an-alias",children:"Create an Alias"}),"\n",(0,o.jsxs)(r.A,{children:[(0,o.jsx)(i.A,{value:"ui",label:"UI",default:!0,children:(0,o.jsxs)("div",{class:"flex-column",children:[(0,o.jsx)("div",{style:{width:"70%",margin:"20px"},children:(0,o.jsx)(l.p,{children:(0,o.jsx)(l.img,{alt:"Create Prompt Alias",src:n(11132).A+"",width:"817",height:"308"})})}),(0,o.jsxs)(l.ol,{children:["\n",(0,o.jsx)(l.li,{children:"Open the existing prompt version in the MLflow UI."}),"\n",(0,o.jsxs)(l.li,{children:["Click on the ",(0,o.jsx)(l.strong,{children:"Add"})," button next to the ",(0,o.jsx)(l.strong,{children:"Aliases"})," section."]}),"\n",(0,o.jsx)(l.li,{children:"Choose an existing alias or create a new one by entering the alias name."}),"\n",(0,o.jsxs)(l.li,{children:["Click ",(0,o.jsx)(l.strong,{children:"Save aliases"})," to apply the changes."]}),"\n"]})]})}),(0,o.jsx)(i.A,{value:"python",label:"Python",default:!0,children:(0,o.jsx)("div",{class:"flex-column",children:(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{className:"language-python",children:'# Set a production alias for a specific version\nmlflow.set_prompt_alias("summarization-prompt", alias="production", version=2)\n'})})})})]}),"\n",(0,o.jsx)(l.p,{children:"Attached aliases can be viewed in the prompt list page. You can click the pencil icon to edit or delete an alias directly from the list view."}),"\n",(0,o.jsx)(l.h3,{id:"load-a-prompt-using-an-alias",children:"Load a Prompt using an Alias"}),"\n",(0,o.jsxs)(l.p,{children:["To load a prompt using an alias, use the ",(0,o.jsx)(l.code,{children:"prompts:/<prompt_name>@<alias>"})," format as the prompt URI:"]}),"\n",(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{className:"language-python",children:'prompt = mlflow.load_prompt("prompts:/summarization-prompt@production")\n'})})]})}function h(e={}){const{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,o.jsx)(l,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},86294:(e,l,n)=>{n.d(l,{Zp:()=>s,AC:()=>i,WO:()=>m,tf:()=>d,_C:()=>p,$3:()=>c,jK:()=>h});var a=n(34164);const o={CardGroup:"CardGroup_P84T",MaxThreeColumns:"MaxThreeColumns_FO1r",AutofillColumns:"AutofillColumns_fKhQ",Card:"Card_aSCR",CardBordered:"CardBordered_glGF",CardBody:"CardBody_BhRs",TextColor:"TextColor_a8Tp",BoxRoot:"BoxRoot_Etgr",FlexWrapNowrap:"FlexWrapNowrap_f60k",FlexJustifyContentFlexStart:"FlexJustifyContentFlexStart_ZYv5",FlexDirectionRow:"FlexDirectionRow_T2qL",FlexAlignItemsCenter:"FlexAlignItemsCenter_EHVM",FlexFlex:"FlexFlex__JTE",Link:"Link_fVkl",MarginLeft4:"MarginLeft4_YQSJ",MarginTop4:"MarginTop4_jXKN",PaddingBottom4:"PaddingBottom4_O9gt",LogoCardContent:"LogoCardContent_kCQm",LogoCardImage:"LogoCardImage_JdcX",SmallLogoCardContent:"SmallLogoCardContent_LxhV",SmallLogoCardImage:"SmallLogoCardImage_tPZl",NewFeatureCardContent:"NewFeatureCardContent_Rq3d",NewFeatureCardHeading:"NewFeatureCardHeading_f6q3",NewFeatureCardHeadingSeparator:"NewFeatureCardHeadingSeparator_pSx8",NewFeatureCardTags:"NewFeatureCardTags_IFHO",NewFeatureCardWrapper:"NewFeatureCardWrapper_NQ0k",TitleCardContent:"TitleCardContent_l9MQ",TitleCardTitle:"TitleCardTitle__K8J",TitleCardSeparator:"TitleCardSeparator_IN2E",Cols1:"Cols1_Gr2U",Cols2:"Cols2_sRvc",Cols3:"Cols3_KjUS",Cols4:"Cols4_dKOj",Cols5:"Cols5_jDmj",Cols6:"Cols6_Q0OR"};var t=n(56289),r=n(74848);const i=e=>{let{children:l,isSmall:n,cols:t}=e;return(0,r.jsx)("div",{className:(0,a.A)(o.CardGroup,n?o.AutofillColumns:t?o[`Cols${t}`]:o.MaxThreeColumns),children:l})},s=e=>{let{children:l,link:n=""}=e;return n?(0,r.jsx)(t.A,{className:(0,a.A)(o.Link,o.Card,o.CardBordered),to:n,children:l}):(0,r.jsx)("div",{className:(0,a.A)(o.Card,o.CardBordered),children:l})},p=e=>{let{headerText:l,link:n,text:t}=e;return(0,r.jsx)(s,{link:n,children:(0,r.jsxs)("span",{children:[(0,r.jsx)("div",{className:(0,a.A)(o.CardTitle,o.BoxRoot,o.PaddingBottom4),style:{pointerEvents:"none"},children:(0,r.jsx)("div",{className:(0,a.A)(o.BoxRoot,o.FlexFlex,o.FlexAlignItemsCenter,o.FlexDirectionRow,o.FlexJustifyContentFlexStart,o.FlexWrapNowrap),style:{marginLeft:"-4px",marginTop:"-4px"},children:(0,r.jsx)("div",{className:(0,a.A)(o.BoxRoot,o.BoxHideIfEmpty,o.MarginTop4,o.MarginLeft4),style:{pointerEvents:"auto"},children:(0,r.jsx)("span",{className:"",children:l})})})}),(0,r.jsx)("span",{className:(0,a.A)(o.TextColor,o.CardBody),children:(0,r.jsx)("p",{children:t})})]})})},m=e=>{let{description:l,children:n,link:a}=e;return(0,r.jsx)(s,{link:a,children:(0,r.jsxs)("div",{className:o.LogoCardContent,children:[(0,r.jsx)("div",{className:o.LogoCardImage,children:n}),(0,r.jsx)("p",{className:o.TextColor,children:l})]})})},c=e=>{let{children:l,link:n}=e;return(0,r.jsx)(s,{link:n,children:(0,r.jsx)("div",{className:o.SmallLogoCardContent,children:(0,r.jsx)("div",{className:(0,a.A)("max-height-img-container",o.SmallLogoCardImage),children:l})})})},d=e=>{let{children:l,description:n,name:a,releaseVersion:i,learnMoreLink:p=""}=e;return(0,r.jsx)(s,{children:(0,r.jsxs)("div",{className:o.NewFeatureCardWrapper,children:[(0,r.jsxs)("div",{className:o.NewFeatureCardContent,children:[(0,r.jsxs)("div",{className:o.NewFeatureCardHeading,children:[a,(0,r.jsx)("br",{}),(0,r.jsx)("hr",{className:o.NewFeatureCardHeadingSeparator})]}),(0,r.jsx)("div",{className:o.LogoCardImage,children:l}),(0,r.jsx)("br",{}),(0,r.jsx)("p",{children:n}),(0,r.jsx)("br",{})]}),(0,r.jsxs)("div",{className:o.NewFeatureCardTags,children:[(0,r.jsx)("div",{children:p&&(0,r.jsx)(t.A,{className:"button button--outline button--sm button--primary",to:p,children:"Learn more"})}),(0,r.jsxs)(t.A,{className:"button button--outline button--sm button--primary",to:`https://github.com/mlflow/mlflow/releases/tag/v${i}`,children:["released in ",i]})]})]})})},h=e=>{let{title:l,description:n,link:t=""}=e;return(0,r.jsx)(s,{link:t,children:(0,r.jsxs)("div",{className:o.TitleCardContent,children:[(0,r.jsx)("div",{className:(0,a.A)(o.TitleCardTitle),style:{textAlign:"left",fontWeight:"bold"},children:l}),(0,r.jsx)("hr",{className:(0,a.A)(o.TitleCardSeparator),style:{margin:"12px 0"}}),(0,r.jsx)("p",{className:(0,a.A)(o.TextColor),children:n})]})})}}}]);