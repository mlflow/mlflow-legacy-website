{"openapi": "3.1.0", "info": {"title": "MLflow Gateway API", "description": "The core gateway API for reverse proxy interface using remote inference endpoints within MLflow", "version": "2.5.0"}, "paths": {"/gateway/chat/invocations": {"post": {"summary": " Chat", "operationId": "_chat_gateway_chat_invocations_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/mlflow__gateway__schemas__chat__RequestPayload"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/mlflow__gateway__schemas__chat__ResponsePayload"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/gateway/completions/invocations": {"post": {"summary": " Completions", "operationId": "_completions_gateway_completions_invocations_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/mlflow__gateway__schemas__completions__RequestPayload"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/mlflow__gateway__schemas__completions__ResponsePayload"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/gateway/embeddings/invocations": {"post": {"summary": " Embeddings", "operationId": "_embeddings_gateway_embeddings_invocations_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/mlflow__gateway__schemas__embeddings__RequestPayload"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/mlflow__gateway__schemas__embeddings__ResponsePayload"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/health": {"get": {"summary": "Health", "operationId": "health_health_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HealthResponse"}}}}}}}, "/api/2.0/gateway/routes/{route_name}": {"get": {"summary": "Get Route", "operationId": "get_route_api_2_0_gateway_routes__route_name__get", "parameters": [{"required": true, "schema": {"type": "string", "title": "Route Name"}, "name": "route_name", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Route"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/2.0/gateway/routes/": {"get": {"summary": "Search Routes", "operationId": "search_routes_api_2_0_gateway_routes__get", "parameters": [{"required": false, "schema": {"type": "string", "title": "Page Token"}, "name": "page_token", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SearchRoutesResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"FinishReason": {"type": "string", "enum": ["stop", "length"], "title": "FinishReason", "description": "An enumeration."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "HealthResponse": {"properties": {"status": {"type": "string", "title": "Status"}}, "type": "object", "required": ["status"], "title": "HealthResponse"}, "ModelInfo": {"properties": {"name": {"type": "string", "title": "Name"}, "provider": {"$ref": "#/components/schemas/Provider"}}, "type": "object", "required": ["provider"], "title": "ModelInfo", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request"}, "Provider": {"type": "string", "enum": ["openai", "anthropic", "databricks-model-serving", "cohere"], "title": "Provider", "description": "An enumeration."}, "RequestMessage": {"properties": {"role": {"type": "string", "title": "Role"}, "content": {"type": "string", "title": "Content"}}, "type": "object", "required": ["role", "content"], "title": "RequestMessage", "description": "A pydantic model representing Gateway request data, such as a chat or completions request"}, "ResponseMessage": {"properties": {"role": {"type": "string", "title": "Role"}, "content": {"type": "string", "title": "Content"}}, "type": "object", "required": ["role", "content"], "title": "ResponseMessage", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request"}, "Route": {"properties": {"name": {"type": "string", "title": "Name"}, "route_type": {"$ref": "#/components/schemas/RouteType"}, "model": {"$ref": "#/components/schemas/ModelInfo"}, "route_url": {"type": "string", "title": "Route Url"}}, "type": "object", "required": ["name", "route_type", "model", "route_url"], "title": "Route", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request", "example": {"name": "openai-completions", "route_type": "llm/v1/completions", "model": {"name": "gpt-3.5-turbo", "provider": "openai"}, "route_url": "/gateway/routes/completions/invocations"}}, "RouteType": {"type": "string", "enum": ["llm/v1/completions", "llm/v1/chat", "llm/v1/embeddings"], "title": "RouteType", "description": "An enumeration."}, "SearchRoutesResponse": {"properties": {"routes": {"items": {"$ref": "#/components/schemas/Route"}, "type": "array", "title": "Routes"}, "next_page_token": {"type": "string", "title": "Next Page Token"}}, "type": "object", "required": ["routes"], "title": "SearchRoutesResponse", "example": {"routes": [{"name": "openai-chat", "route_type": "llm/v1/chat", "model": {"name": "gpt-3.5-turbo", "provider": "openai"}}, {"name": "anthropic-completions", "route_type": "llm/v1/completions", "model": {"name": "claude-instant-100k", "provider": "anthropic"}}, {"name": "cohere-embeddings", "route_type": "llm/v1/embeddings", "model": {"name": "embed-english-v2.0", "provider": "cohere"}}], "next_page_token": "eyJpbmRleCI6IDExfQ=="}}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "mlflow__gateway__schemas__chat__Candidate": {"properties": {"message": {"$ref": "#/components/schemas/ResponseMessage"}, "metadata": {"$ref": "#/components/schemas/mlflow__gateway__schemas__chat__CandidateMetadata"}}, "type": "object", "required": ["message", "metadata"], "title": "Candidate", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request"}, "mlflow__gateway__schemas__chat__CandidateMetadata": {"properties": {"finish_reason": {"$ref": "#/components/schemas/FinishReason"}}, "type": "object", "title": "CandidateMetadata", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request"}, "mlflow__gateway__schemas__chat__Metadata": {"properties": {"input_tokens": {"type": "integer", "title": "Input Tokens"}, "output_tokens": {"type": "integer", "title": "Output Tokens"}, "total_tokens": {"type": "integer", "title": "Total Tokens"}, "model": {"type": "string", "title": "Model"}, "route_type": {"$ref": "#/components/schemas/RouteType"}}, "type": "object", "required": ["model", "route_type"], "title": "Metadata", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request"}, "mlflow__gateway__schemas__chat__RequestPayload": {"properties": {"temperature": {"type": "number", "maximum": 1.0, "minimum": 0.0, "title": "Temperature", "default": 0.0}, "candidate_count": {"type": "integer", "maximum": 5.0, "minimum": 1.0, "title": "Candidate Count", "default": 1}, "stop": {"items": {"type": "string"}, "type": "array", "minItems": 1, "title": "Stop"}, "max_tokens": {"type": "integer", "minimum": 1.0, "title": "Max Tokens"}, "messages": {"items": {"$ref": "#/components/schemas/RequestMessage"}, "type": "array", "minItems": 1, "title": "Messages"}}, "type": "object", "required": ["messages"], "title": "RequestPayload", "description": "A pydantic model representing Gateway request data, such as a chat or completions request", "example": {"messages": [{"role": "user", "content": "hello world"}], "temperature": 0.0, "max_tokens": 64, "stop": ["END"], "candidate_count": 1}}, "mlflow__gateway__schemas__chat__ResponsePayload": {"properties": {"candidates": {"items": {"$ref": "#/components/schemas/mlflow__gateway__schemas__chat__Candidate"}, "type": "array", "title": "Candidates"}, "metadata": {"$ref": "#/components/schemas/mlflow__gateway__schemas__chat__Metadata"}}, "type": "object", "required": ["candidates", "metadata"], "title": "ResponsePayload", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request", "example": {"candidates": [{"message": {"role": "user", "content": "hello world"}, "metadata": {"finish_reason": "stop"}}], "metadata": {"input_tokens": 1, "output_tokens": 2, "total_tokens": 3, "model": "gpt-3.5-turbo", "route_type": "llm/v1/completions"}}}, "mlflow__gateway__schemas__completions__Candidate": {"properties": {"text": {"type": "string", "title": "Text"}, "metadata": {"$ref": "#/components/schemas/mlflow__gateway__schemas__completions__CandidateMetadata"}}, "type": "object", "required": ["text", "metadata"], "title": "Candidate", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request"}, "mlflow__gateway__schemas__completions__CandidateMetadata": {"properties": {"finish_reason": {"$ref": "#/components/schemas/FinishReason"}}, "type": "object", "title": "CandidateMetadata", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request"}, "mlflow__gateway__schemas__completions__Metadata": {"properties": {"input_tokens": {"type": "integer", "title": "Input Tokens"}, "output_tokens": {"type": "integer", "title": "Output Tokens"}, "total_tokens": {"type": "integer", "title": "Total Tokens"}, "model": {"type": "string", "title": "Model"}, "route_type": {"$ref": "#/components/schemas/RouteType"}}, "type": "object", "required": ["model", "route_type"], "title": "Metadata", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request"}, "mlflow__gateway__schemas__completions__RequestPayload": {"properties": {"temperature": {"type": "number", "maximum": 1.0, "minimum": 0.0, "title": "Temperature", "default": 0.0}, "candidate_count": {"type": "integer", "maximum": 5.0, "minimum": 1.0, "title": "Candidate Count", "default": 1}, "stop": {"items": {"type": "string"}, "type": "array", "minItems": 1, "title": "Stop"}, "max_tokens": {"type": "integer", "minimum": 1.0, "title": "Max Tokens"}, "prompt": {"type": "string", "title": "Prompt"}}, "type": "object", "required": ["prompt"], "title": "RequestPayload", "description": "A pydantic model representing Gateway request data, such as a chat or completions request", "example": {"prompt": "hello", "temperature": 0.0, "max_tokens": 64, "stop": ["END"], "candidate_count": 1}}, "mlflow__gateway__schemas__completions__ResponsePayload": {"properties": {"candidates": {"items": {"$ref": "#/components/schemas/mlflow__gateway__schemas__completions__Candidate"}, "type": "array", "title": "Candidates"}, "metadata": {"$ref": "#/components/schemas/mlflow__gateway__schemas__completions__Metadata"}}, "type": "object", "required": ["candidates", "metadata"], "title": "ResponsePayload", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request", "example": {"candidates": [{"text": "hello world", "metadata": {"finish_reason": "stop"}}], "metadata": {"input_tokens": 1, "output_tokens": 2, "total_tokens": 3, "model": "gpt-3.5-turbo", "route_type": "llm/v1/completions"}}}, "mlflow__gateway__schemas__embeddings__Metadata": {"properties": {"input_tokens": {"type": "integer", "title": "Input Tokens"}, "output_tokens": {"type": "integer", "title": "Output Tokens"}, "total_tokens": {"type": "integer", "title": "Total Tokens"}, "model": {"type": "string", "title": "Model"}, "route_type": {"$ref": "#/components/schemas/RouteType"}}, "type": "object", "required": ["model", "route_type"], "title": "Metadata", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request"}, "mlflow__gateway__schemas__embeddings__RequestPayload": {"properties": {"text": {"anyOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}], "title": "Text"}}, "type": "object", "required": ["text"], "title": "RequestPayload", "description": "A pydantic model representing Gateway request data, such as a chat or completions request", "example": {"text": ["hello", "world"]}}, "mlflow__gateway__schemas__embeddings__ResponsePayload": {"properties": {"embeddings": {"items": {"items": {"type": "number"}, "type": "array"}, "type": "array", "title": "Embeddings"}, "metadata": {"$ref": "#/components/schemas/mlflow__gateway__schemas__embeddings__Metadata"}}, "type": "object", "required": ["embeddings", "metadata"], "title": "ResponsePayload", "description": "A pydantic model representing Gateway response data, such as information about a Gateway\nRoute returned in response to a GetRoute request", "example": {"embeddings": [[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]], "metadata": {"input_tokens": 1, "output_tokens": 0, "total_tokens": 1, "model": "gpt-3.5-turbo", "route_type": "llm/v1/embeddings"}}}}}}